% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/proxy.R
\name{calculateProxy}
\alias{calculateProxy}
\alias{plotProxy}
\title{Calculation of Lifespan Proxies}
\usage{
calculateProxy(
  CFUsMLE,
  maxTime = max(CFUsMLE$Time),
  viability = 0.05,
  constraint = "decrease",
  ...
)

plotProxy(
  CFUsMLE,
  Sample,
  maxTime = max(CFUsMLE$Time),
  viability = 0.05,
  constraint = "decrease",
  ...
)
}
\arguments{
\item{CFUsMLE}{A \code{data.frame} produced by \code{\link{analyseColonyVectors}} containing CFU data from which proxies are to be calculated.
Must contain the column names \code{"Sample"}, \code{"Time"} and \code{"ColonyFormingUnitsPerDroplet"}.}

\item{maxTime}{The maximum time. Proxy solutions will be searched for in the interval between \code{0} and \code{"maxTime"}. Defaults to the maximum value in the \code{"Time"} column of \code{CFUsMLE}.}

\item{viability}{The proportion of viable cells. See 'Details'. Defaults to \code{0.05}.}

\item{constraint}{The constraint used when fitting a spline to CFU data. Must be one of \code{"none"}, \code{"increase"}, \code{"decrease"}, \code{"convex"}, \code{"concave"} or \code{"periodic"}. See \code{\link[cobs]{cobs}}. Defaults to \code{"decrease"}.}

\item{...}{Additional arguments passed to \code{\link[cobs]{cobs}}.}

\item{Sample}{Length 1 character vector specifying which sample to plot.}
}
\value{
\code{calculateProxy} will return a \code{data.frame} containing the proxy for each sample.

\code{plotProxy} will return a \code{\link[ggplot2]{ggplot}} object.
}
\description{
\code{calculateProxy} will calculate a proxy for each sample, providing a single number which encapsulates lifespan.

\code{plotProxy} will create a plot showing how the proxy is calculated for a specified sample.
}
\details{
Proxies are calculated as the square root of the amount of time take for a sample to reach a specified viability.
This is achieved by fitting a median spline (see \code{\link[cobs]{cobs}}) to the CFU data.
Specifically, \code{CFUsMLE$Time} is fitted against \code{log10(CFUsMLE$ColonyFormingUnitsPerDroplet + 1)}.
The proxy is the square root of the amount of time taken for the fitted values to reach the indicated viability.
In the case that no solutions are found within the specified time interval, the proxy is set as \code{NA}.
In the case that multiple solutions are found, the proxy is set as the first solution.
}
\examples{
#Get a data.frame showing maximum likelihood estimation as produced by analyseColonyVectors
CFUsMLE <- system.file("extdata", "CFUsMLE.csv", package="DeadOrAlive")
CFUsMLE <- read.csv(CFUsMLE)

#Remove low quality data points
CFUsMLE <- CFUsMLE[CFUsMLE$TotalExclusions<=1,]

#Plot proxy calculation for the wt (972 h-)
g1 <- plotProxy(CFUsMLE, "972 h-")
print(g1)

#Calculate a proxy for all samples
proxy <- calculateProxy(CFUsMLE)

#Add proxies to CFUsMLE
CFUsMLE$Proxy <- proxy$Proxy[match(CFUsMLE$Sample, proxy$Sample)]

#Plot all lifespan curves and color by proxy
require(ggplot2)
g2 <- g2 <- ggplot(CFUsMLE, aes(Time, ColonyFormingUnitsPerDroplet + 1, group=Sample, color=Proxy))
g2 <- g2 + geom_point() + geom_line()
g2 <- g2 +  scale_y_log10() + xlab("Time / days") + ylab("CFUs / droplet + 1")
print(g2)
}
