y3 <- x + 2
y4 <- x + 3
df <- data.frame(x=rep(x, 4), y=c(y1, y2, y3, y4), sample=rep(c("y1", "y2", "y3", "y4"), each=10))
library(ggplot2)
ggplot(df, aes(x, y, group=sample, color=sample)) + geom_path()
dfNorm <- ddply(df, .(sample), mutate, y=y/y[x==1])
ggplot(dfNorm, aes(x, y, group=sample, color=sample)) + geom_path()
df$Norm <- "Raw"
dfNorm$Norm <- "Normalised"
dfAll <- rbind(df, dfNorm)
ggplot(dfAll, aes(x, y, group=sample, color=sample)) + geom_path() + facet_grid(~Norm)
x <- 1:10
y1 <- -x
y2 <- -x + 1
y3 <- -x + 2
y4 <- -x + 3
df <- data.frame(x=rep(x, 4), y=c(y1, y2, y3, y4), sample=rep(c("y1", "y2", "y3", "y4"), each=10))
library(ggplot2)
ggplot(df, aes(x, y, group=sample, color=sample)) + geom_path()
library(plyr)
dfNorm <- ddply(df, .(sample), mutate, y=y/y[x==1])
ggplot(dfNorm, aes(x, y, group=sample, color=sample)) + geom_path()
df$Norm <- "Raw"
dfNorm$Norm <- "Normalised"
dfAll <- rbind(df, dfNorm)
ggplot(dfAll, aes(x, y, group=sample, color=sample)) + geom_path() + facet_grid(~Norm)
x <- 1:10
y1 <- x
y2 <- x + 1
y3 <- x + 2
y4 <- x + 3
df <- data.frame(x=rep(x, 4), y=c(y1, y2, y3, y4), sample=rep(c("y1", "y2", "y3", "y4"), each=10))
library(ggplot2)
ggplot(df, aes(x, y, group=sample, color=sample)) + geom_path()
library(plyr)
dfNorm <- ddply(df, .(sample), mutate, y=y/y[x==1])
ggplot(dfNorm, aes(x, y, group=sample, color=sample)) + geom_path()
df$Norm <- "Raw"
dfNorm$Norm <- "Normalised"
dfAll <- rbind(df, dfNorm)
ggplot(dfAll, aes(x, y, group=sample, color=sample)) + geom_path() + facet_grid(~Norm)
dfNorm
log(20) - log(10)
log(40) - log(20)
dfLog <- df
dfLog$y <- log10(dfLog$y)
x <- 1:10
y1 <- x
y2 <- x + 1
y3 <- x + 2
y4 <- x + 3
df <- data.frame(x=rep(x, 4), y=c(y1, y2, y3, y4), sample=rep(c("y1", "y2", "y3", "y4"), each=10))
library(ggplot2)
ggplot(df, aes(x, y, group=sample, color=sample)) + geom_path()
library(plyr)
dfNorm <- ddply(df, .(sample), mutate, y=y/y[x==1])
ggplot(dfNorm, aes(x, y, group=sample, color=sample)) + geom_path()
dfLog <- df
dfLog$y <- log10(dfLog$y)
df$Norm <- "Raw"
dfNorm$Norm <- "Normalised"
dfLog$Norm <- "Log"
dfAll <- rbind(df, dfNorm, dfLog)
ggplot(dfAll, aes(x, y, group=sample, color=sample)) + geom_path() + facet_grid(~Norm)
ggplot(dfLog, aes(x, y, group=sample, color=sample)) + geom_path() + facet_grid(~Norm)
log2(3.6)
log2(3.6)/67
60*log2(3.6)/67
67/log2(3.6)
.4/.36
log2(.4/.36)
log2(.4/.36)*36
36*log2(50)
36*log2(50)/60
36*log2(50)-180
0.4/log2(50)
ggplot(dfLog, aes(x, y, group=sample, color=sample)) + geom_path() + facet_grid(~Norm)
ggplot(dfAll, aes(x, y, group=sample, color=sample)) + geom_path() + facet_grid(~Norm)
ggplot(dfLog, aes(x, y, group=sample, color=sample)) + geom_path() + facet_grid(~Norm)
log2(50)
log2(50)*36
log2(50)*36-180
df <- data.frame(x=rep(1:3, 3), y=c(1,2,4, 1, 1.5, 2, 2, 4, 8), sample=rep(LETTERS[1:3], each=3))
ggplot(dfNorm, aes(x, y, group=sample, color=sample)) + geom_path()
ggplot(df, aes(x, y, group=sample, color=sample)) + geom_path()
ggplot(df, aes(x, y, group=sample, color=sample)) + geom_path() + scale_y_log10()
df <- data.frame(x=rep(1:3, 3), y=c(1,2,4, 1, 1.5, 2, 2, 4, 8), sample=rep(LETTERS[1:3], each=3))
dfLog <- df
dfLog$y <- log10(df$y)
df <- data.frame(x=rep(1:3, 3), y=c(1,2,4, 1, 1.5, 2, 2, 4, 8), sample=rep(LETTERS[1:3], each=3))
ggplot(df, aes(x, y, group=sample, color=sample)) + geom_path()
ggplot(df, aes(x, y, group=sample, color=sample)) + geom_path() + scale_y_log10()
df <- data.frame(x=rep(1:3, 3), y=c(1,2,4, 1, log2(2), 2, 2, 4, 8), sample=rep(LETTERS[1:3], each=3))
ggplot(df, aes(x, y, group=sample, color=sample)) + geom_path()
ggplot(df, aes(x, y, group=sample, color=sample)) + geom_path() + scale_y_log10()
df <- data.frame(x=rep(1:3, 3), y=c(1,2,4, 1, log2(3), 2, 2, 4, 8), sample=rep(LETTERS[1:3], each=3))
ggplot(df, aes(x, y, group=sample, color=sample)) + geom_path()
ggplot(df, aes(x, y, group=sample, color=sample)) + geom_path() + scale_y_log10()
df <- data.frame(x=rep(1:3, 3), y=c(1,2,4, 1, sqrt(2), 2, 2, 4, 8), sample=rep(LETTERS[1:3], each=3))
ggplot(df, aes(x, y, group=sample, color=sample)) + geom_path()
ggplot(df, aes(x, y, group=sample, color=sample)) + geom_path() + scale_y_log10()
ggplot(df, aes(x, y, group=sample, color=sample)) + geom_path()
ggplot(df, aes(x, y, group=sample, color=sample)) + geom_path() + scale_y_log10()
ggplot(df, aes(x, y, group=sample, color=sample)) + geom_path()
df <- data.frame(x=rep(1:3, 3), y=c(1,2,4, 2, 2*sqrt(2), 4, 2, 4, 8), sample=rep(LETTERS[1:3], each=3))
ggplot(df, aes(x, y, group=sample, color=sample)) + geom_path()
ggplot(df, aes(x, y, group=sample, color=sample)) + geom_path() + scale_y_log10()
ggplot(df, aes(x, y, group=sample, color=sample)) + geom_path()
ggplot(df, aes(x, y, group=sample, color=sample)) + geom_path() + scale_y_log10()
ggplot(df, aes(x, y, group=sample, color=sample)) + geom_path()
ggplot(df, aes(x, y, group=sample, color=sample)) + geom_path() + scale_y_log10()
log10(4)
log10(1)
df
library(biomartr)
genes <- c("YPL180W", "YJR066W")
mart <- "ENSEMBL_MART_ENSEMBL"
dataset <- "scerevisiae_gene_ensembl"
attributesToDownload <- c("chromosome_name", "start_position", "end_position", "strand")
genePositions <- biomart(genes, mart, dataset, attributes=attributesToDownload, "ensembl_gene_id")
?biomart
genePositions
logMean <- function(...) {
vals <- unlist(list(...))
logVals <- log(vals)
meanLogVals <- mean(logVals)
return(exp(logVals))
}
logMean(1, 1)
logMean <- function(...) {
vals <- unlist(list(...))
logVals <- log(vals)
meanLogVals <- mean(logVals)
return(exp(meanLogVals))
}
logMean(1, 1)
logMean(1, 2)
logMean(1, 7)
?mean
?list
logMean(1, 10)
logMean(2, 10)
?smooth.spline
40*6
40 * 3 * 2 * 2
8E6
8e6
8e6/2e7
15*0.4
library(openxlsx)
xOld <- read.xlsx("/Volumes/SANDISK/killifish_rubbish/killifish_old_Report.xls")
xOld <- read.xls("/Volumes/SANDISK/killifish_rubbish/killifish_old_Report.xls")
install.packages("gdata")
library(gdata)
xOld <- read.xls("/Volumes/SANDISK/killifish_rubbish/killifish_old_Report.xls")
?read.xls
xOld <- read.xls("/Volumes/SANDISK/killifish_rubbish/killifish_old_Report.xls", method="csv")
xOld <- read.xls("/Volumes/SANDISK/killifish_rubbish/killifish_old_Report.xls", method="tsv")
xOld <- read.xls("/Volumes/SANDISK/killifish_rubbish/killifish_old_Report.xls", method="tab")
install.packages("tidyverse")
library(readxl)
xOld <- read_excel("/Volumes/SANDISK/killifish_rubbish/killifish_old_Report.xls")
xOld <- read_excel("/Volumes/SANDISK/killifish_rubbish/killifish_old_Report.xls")
xOld <- read.csv("/Volumes/SANDISK/killifish_rubbish/killifish_old_Report.csv")
xNEw <- read.csv("/Volumes/SANDISK/killifish_rubbish/killifish_Report.csv")
rm(list=ls())
xOld <- read.csv("/Volumes/SANDISK/killifish_rubbish/killifish_old_Report.csv")
xNew <- read.csv("/Volumes/SANDISK/killifish_rubbish/killifish_Report.csv")
head(xOld)
xOld <- xOld[,c("R.FileName", "EEG.ModifiedSequence")]
xOld <- xOld[,c("R.FileName", "EEG.ModifiedSequence")]
xOld <- xOld[,c("R.FileName", "EG.ModifiedSequence")]
xOldSet11 <- xOld[xOld$R.FileName=="DataSET11",]
tail(xOld)
xOldSet14 <- xOld[xOld$R.FileName=="DataSET14",]
xOldSet11 <- xOldSet11[, c("EG.ModifiedSequence", "FG.Quantity")]
xOldSet14 <- xOldSet14[, c("EG.ModifiedSequence", "FG.Quantity")]
xOld <- read.csv("/Volumes/SANDISK/killifish_rubbish/killifish_old_Report.csv")
xNew <- read.csv("/Volumes/SANDISK/killifish_rubbish/killifish_Report.csv")
xOld <- xOld[, c("R.FileName", "EG.ModifiedSequence", "FG.Quantity")]
xOldSet11 <- xOld[xOld$R.FileName=="DataSET11",]
xOldSet14 <- xOld[xOld$R.FileName=="DataSET14",]
xOldSet11 <- xOldSet11[, c("EG.ModifiedSequence", "FG.Quantity")]
xOldSet14 <- xOldSet14[, c("EG.ModifiedSequence", "FG.Quantity")]
xNew <- xNew[, c("EG.ModifiedSequence", "FG.Quantity")]
xNew
colnames(xOldSet11)[2] <- "Set11"
colnames(xOldSet11)[2] <- "Set11"
colnames(xOldSet14)[2] <- "Set14"
colnames(xNew)[2] <- "New"
x <- merge(xOldSet11, xOldSet14)
x <- merge(x, xNew)
View(x)
xOld <- read.csv("/Volumes/SANDISK/killifish_rubbish/killifish_old_Report.csv")
xNew <- read.csv("/Volumes/SANDISK/killifish_rubbish/killifish_Report.csv")
xOld <- xOld[, c("R.FileName", "EG.ModifiedSequence", "FG.Quantity")]
xOldSet11 <- xOld[xOld$R.FileName=="DataSET11",]
xOldSet14 <- xOld[xOld$R.FileName=="DataSET14",]
xOldSet11 <- xOldSet11[, c("EG.ModifiedSequence", "FG.Quantity")]
xOldSet14 <- xOldSet14[, c("EG.ModifiedSequence", "FG.Quantity")]
xNew <- xNew[, c("EG.ModifiedSequence", "FG.Quantity")]
colnames(xOldSet11)[2] <- "Set11"
colnames(xOldSet14)[2] <- "Set14"
colnames(xNew)[2] <- "New"
x <- merge(xOldSet11, xOldSet14, all = F)
x <- merge(x, xNew, all = F)
?merge
x <- merge(xOldSet11, xOldSet14, by="EG.ModifiedSequence", all=F)
xOld <- read.csv("/Volumes/SANDISK/killifish_rubbish/killifish_old_Report.csv")
xNew <- read.csv("/Volumes/SANDISK/killifish_rubbish/killifish_Report.csv")
xOld <- xOld[, c("R.FileName", "EG.ModifiedSequence", "FG.Quantity")]
xOldSet11 <- xOld[xOld$R.FileName=="DataSET11",]
xOldSet14 <- xOld[xOld$R.FileName=="DataSET14",]
xOldSet11 <- xOldSet11[, c("EG.ModifiedSequence", "FG.Quantity")]
xOldSet14 <- xOldSet14[, c("EG.ModifiedSequence", "FG.Quantity")]
xNew <- xNew[, c("EG.ModifiedSequence", "FG.Quantity")]
colnames(xOldSet11)[2] <- "Set11"
colnames(xOldSet14)[2] <- "Set14"
colnames(xNew)[2] <- "New"
x <- merge(xOldSet11, xOldSet14, by="EG.ModifiedSequence", all=F)
x <- merge(x, xNew, by="EG.ModifiedSequence", all=F)
x <- merge(xOldSet11, xOldSet14, by="EG.ModifiedSequence", all=F)
head(x)
merge(x, xNew, by="EG.ModifiedSequence", all=F)
x <- merge(xOldSet11, xNew, by="EG.ModifiedSequence", all=F)
xOld <- read.csv("/Volumes/SANDISK/killifish_rubbish/killifish_old_Report.csv")
xNew <- read.csv("/Volumes/SANDISK/killifish_rubbish/killifish_Report.csv")
xOld <- xOld[, c("R.FileName", "EG.ModifiedSequence", "FG.Quantity")]
xOldSet11 <- xOld[xOld$R.FileName=="DataSET11",]
xOldSet14 <- xOld[xOld$R.FileName=="DataSET14",]
xOldSet11 <- xOldSet11[, c("EG.ModifiedSequence", "FG.Quantity")]
xOldSet14 <- xOldSet14[, c("EG.ModifiedSequence", "FG.Quantity")]
xNew <- xNew[, c("EG.ModifiedSequence", "FG.Quantity")]
colnames(xOldSet11)[2] <- "Set11"
colnames(xOldSet14)[2] <- "Set14"
colnames(xNew)[2] <- "New"
x <- merge(xOldSet11, xOldSet14, by="EG.ModifiedSequence", all=T)
x <- merge(x, xNew, by="EG.ModifiedSequence", all=T)
head(x)
library(ggplot2)
x[is.na(x$New)==F,]
x$isNA <- is.na(x$New)
g <- ggplot(x, aes(x=Set11, color=isNA)) + geom_density()
g
g <- ggplot(x, aes(x=Set11, color=isNA)) + geom_density() + scale_x_log10()
g
xOld <- read.csv("/Volumes/SANDISK/killifish_rubbish/killifish_old_Report.csv")
head(xOld)
g <- ggplot(x, aes(x=Set11, color=isNA)) + geom_histogram() + scale_x_log10()
g
g <- ggplot(x, aes(x=Set11, color=isNA)) + geom_histogram(position="dodge") + scale_x_log10()
g
g <- ggplot(x, aes(x=Set11, fill=isNA)) + geom_histogram(position="dodge") + scale_x_log10()
g
g <- ggplot(x, aes(x=Set14, fill=isNA)) + geom_histogram(position="dodge") + scale_x_log10()
g
xOld <- read.csv("/Volumes/SANDISK/killifish_rubbish/killifish_old_Report.csv")
xNew <- read.csv("/Volumes/SANDISK/killifish_rubbish/killifish_Report.csv")
head(xNew)
xNew
xOld <- read.csv("/Volumes/SANDISK/killifish_rubbish/killifish_old_Report.csv")
xNew <- read.csv("/Volumes/SANDISK/killifish_rubbish/killifish_Report.csv")
xOld <- xOld[, c("R.FileName", "EG.ModifiedSequence", "FG.Quantity")]
xOldSet11 <- xOld[xOld$R.FileName=="DataSET11",]
xOldSet14 <- xOld[xOld$R.FileName=="DataSET14",]
xOldSet11 <- xOldSet11[, c("EG.ModifiedSequence", "FG.Quantity")]
xOldSet14 <- xOldSet14[, c("EG.ModifiedSequence", "FG.Quantity")]
xNew <- xNew[, c("EG.ModifiedSequence", "FG.Quantity")]
colnames(xOldSet11)[2] <- "Set11"
colnames(xOldSet14)[2] <- "Set14"
colnames(xNew)[2] <- "New"
x <- merge(xOldSet11, xOldSet14, by="EG.ModifiedSequence", all=T)
x <- merge(x, xNew, by="EG.ModifiedSequence", all=T)
x$isNA <- is.na(x$New)
x[x$isNA,]
x[x$isNA==F,]
xNew
xOld <- read.csv("/Volumes/SANDISK/killifish_rubbish/killifish_old_Report.csv")
xNew <- read.csv("/Volumes/SANDISK/killifish_rubbish/killifish_Report.csv")
xNew
xOld <- read.csv("/Volumes/SANDISK/killifish_rubbish/killifish_old_Report.csv")
xNew <- read.csv("/Volumes/SANDISK/killifish_rubbish/killifish_Report.csv")
xOld <- xOld[, c("R.FileName", "EG.ModifiedSequence", "FG.Quantity")]
xOldSet11 <- xOld[xOld$R.FileName=="DataSET11",]
xOldSet14 <- xOld[xOld$R.FileName=="DataSET14",]
xOldSet11
length(length(unique(xOldSet11$EG.ModifiedSequence)))
length(unique(xOldSet11$EG.ModifiedSequence))
x[x$isNA==F,]
xNew <- xNew[, c("EG.ModifiedSequence", "FG.Quantity")]
xOld <- read.csv("/Volumes/SANDISK/killifish_rubbish/killifish_old_Report.csv")
xNew <- read.csv("/Volumes/SANDISK/killifish_rubbish/killifish_Report.csv")
xNew
xNew <- xNew[xNew$R.FileName=="John_03_10_19__G2_0.23",]
xOld <- xOld[, c("R.FileName", "EG.ModifiedSequence", "FG.Quantity")]
xOldSet11 <- xOld[xOld$R.FileName=="DataSET11",]
xOldSet14 <- xOld[xOld$R.FileName=="DataSET14",]
xOldSet11 <- xOldSet11[, c("EG.ModifiedSequence", "FG.Quantity")]
xOldSet14 <- xOldSet14[, c("EG.ModifiedSequence", "FG.Quantity")]
xNew <- xNew[, c("EG.ModifiedSequence", "FG.Quantity")]
colnames(xOldSet11)[2] <- "Set11"
colnames(xOldSet14)[2] <- "Set14"
colnames(xNew)[2] <- "New"
x <- merge(xOldSet11, xOldSet14, by="EG.ModifiedSequence", all=T)
x <- merge(x, xNew, by="EG.ModifiedSequence", all=T)
x$isNA <- is.na(x$New)
library(ggplot2)
g <- ggplot(x, aes(x=Set14, fill=isNA)) + geom_histogram(position="dodge") + scale_x_log10()
g
xOld <- read.csv("/Volumes/SANDISK/killifish_rubbish/killifish_old_Report.csv")
xNew <- read.csv("/Volumes/SANDISK/killifish_rubbish/killifish_Report.csv")
xNew <- xNew[xNew$R.FileName=="John_03_10_19__G1_0.23",]
xOld <- xOld[, c("R.FileName", "EG.ModifiedSequence", "FG.Quantity")]
xOldSet11 <- xOld[xOld$R.FileName=="DataSET11",]
xOldSet14 <- xOld[xOld$R.FileName=="DataSET14",]
xOldSet11 <- xOldSet11[, c("EG.ModifiedSequence", "FG.Quantity")]
xOldSet14 <- xOldSet14[, c("EG.ModifiedSequence", "FG.Quantity")]
xNew <- xNew[, c("EG.ModifiedSequence", "FG.Quantity")]
colnames(xOldSet11)[2] <- "Set11"
colnames(xOldSet14)[2] <- "Set14"
colnames(xNew)[2] <- "New"
x <- merge(xOldSet11, xOldSet14, by="EG.ModifiedSequence", all=T)
x <- merge(x, xNew, by="EG.ModifiedSequence", all=T)
x$isNA <- is.na(x$New)
library(ggplot2)
g <- ggplot(x, aes(x=Set14, fill=isNA)) + geom_histogram(position="dodge") + scale_x_log10()
g
xOld <- read.csv("/Volumes/SANDISK/killifish_rubbish/killifish_old_Report.csv")
xNew <- read.csv("/Volumes/SANDISK/killifish_rubbish/killifish_Report.csv")
xNew <- xNew[xNew$R.FileName=="John_03_10_19__G1_0.23",]
xOld <- xOld[, c("R.FileName", "EG.ModifiedSequence", "FG.Quantity")]
xOldSet11 <- xOld[xOld$R.FileName=="DataSET11",]
xOldSet14 <- xOld[xOld$R.FileName=="DataSET14",]
xOldSet11 <- xOldSet11[, c("EG.ModifiedSequence", "FG.Quantity")]
xOldSet14 <- xOldSet14[, c("EG.ModifiedSequence", "FG.Quantity")]
xNew <- xNew[, c("EG.ModifiedSequence", "FG.Quantity")]
colnames(xOldSet11)[2] <- "Set11"
colnames(xOldSet14)[2] <- "Set14"
colnames(xNew)[2] <- "New"
x <- merge(xOldSet11, xOldSet14, by="EG.ModifiedSequence", all=T)
x <- merge(x, xNew, by="EG.ModifiedSequence", all=T)
x$isNA <- is.na(x$New)
library(ggplot2)
g <- ggplot(x, aes(x=Set14, fill=isNA)) + geom_histogram(position="dodge") + scale_x_log10()
g
xOld
xOld <- read.csv("/Volumes/SANDISK/killifish_rubbish/killifish_old_Report.csv")
xNew <- read.csv("/Volumes/SANDISK/killifish_rubbish/killifish_Report.csv")
xNew <- xNew[xNew$R.FileName=="John_03_10_19__G2_0.23",]
xOld <- xOld[, c("R.FileName", "EG.ModifiedSequence", "FG.Quantity")]
xOldSet11 <- xOld[xOld$R.FileName=="DataSET11",]
xOldSet14 <- xOld[xOld$R.FileName=="DataSET14",]
xOldSet11 <- xOldSet11[, c("EG.ModifiedSequence", "FG.Quantity")]
xOldSet14 <- xOldSet14[, c("EG.ModifiedSequence", "FG.Quantity")]
xNew <- xNew[, c("EG.ModifiedSequence", "FG.Quantity")]
colnames(xOldSet11)[2] <- "Set11"
colnames(xOldSet14)[2] <- "Set14"
colnames(xNew)[2] <- "New"
x <- merge(xOldSet11, xOldSet14, by="EG.ModifiedSequence", all=T)
x <- merge(x, xNew, by="EG.ModifiedSequence", all=T)
x$isNA <- is.na(x$New)
library(ggplot2)
g <- ggplot(x, aes(x=Set14, fill=isNA)) + geom_histogram(position="dodge") + scale_x_log10()
g
xOld <- read.csv("/Volumes/SANDISK/killifish_rubbish/killifish_old_Report.csv")
xNew <- read.csv("/Volumes/SANDISK/killifish_rubbish/killifish_Report.csv")
xNew <- xNew[xNew$R.FileName=="John_03_10_19__G1_0.18",]
xOld <- xOld[, c("R.FileName", "EG.ModifiedSequence", "FG.Quantity")]
xOldSet11 <- xOld[xOld$R.FileName=="DataSET11",]
xOldSet14 <- xOld[xOld$R.FileName=="DataSET14",]
xOldSet11 <- xOldSet11[, c("EG.ModifiedSequence", "FG.Quantity")]
xOldSet14 <- xOldSet14[, c("EG.ModifiedSequence", "FG.Quantity")]
xNew <- xNew[, c("EG.ModifiedSequence", "FG.Quantity")]
colnames(xOldSet11)[2] <- "Set11"
colnames(xOldSet14)[2] <- "Set14"
colnames(xNew)[2] <- "New"
x <- merge(xOldSet11, xOldSet14, by="EG.ModifiedSequence", all=T)
x <- merge(x, xNew, by="EG.ModifiedSequence", all=T)
x$isNA <- is.na(x$New)
library(ggplot2)
g <- ggplot(x, aes(x=Set14, fill=isNA)) + geom_histogram(position="dodge") + scale_x_log10()
g
28!
matrix(rep(1, 28^2))
matrix(rep(1, 28^2), ncol=28)
lower.tri(matrix(rep(1, 28^2), ncol=28))
lower.tri(matrix(rep(1, 28^2), ncol=28), diag = T)
sum(lower.tri(matrix(rep(1, 28^2), ncol=28), diag = T))
sum(lower.tri(matrix(rep(1, 28^2), ncol=28), diag = F))
0.02/0.1
.1/0.02
log(.1/0.02, 2)
log(.1/0.02, 2) + 1
1.5 * (log(.1/0.02, 2) + 1)
1.5 * (log(1/0.02, 2) + 1)
1.5 * (log(1/0.002, 2) + 1)
1.5 * (log(1/0.02, 2) + 1)
0.002/0.00004
.4/20
20/.4
log(50, 2)
log(50, 2) * 36
log(50, 2) * (36/60)
2*2*2*2
2*2*2*2*3
*2
2*2*2*2*3*2
10^6
10^6/3000
library(DeadOrAlive)
?extractColonyVectors
#Get a csv file showing the identity of each plate to be analysed
plateReferenceFile <- system.file("extdata", "plateReferenceFile.csv", package="DeadOrAlive")
#Get a csv file showing the identity of each sample on each plate
sampleReferenceFile <- system.file("extdata", "sampleReferenceFile.csv", package="DeadOrAlive")
#Get the directory of files to be analysed
myDirectory <- system.file("extdata", "ImageAnalysisOutputFiles", package="DeadOrAlive")
#Show all the files in the directory
list.files(myDirectory)
#Get the patterns of colonies from the files (from left to right across the plate)
myColonyVectors <- extractColonyVectors(dir=myDirectory, plateReferenceFile=plateReferenceFile, sampleReferenceFile=sampleReferenceFile)
myColonyVectors$colonies[1]
myColonyVectors$colonies[[1]]
myColonyVectors$colonies[[1]] <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0)
myColonyVectors
myColonyVectors$sample
myColonyVectors$grid
analyseColonyVectors(myColonyVectors[1], save.table = F, save.markdown = F)
myColonyVectors$colonies[[1]]
myColonyVectors$colonies[[1]] <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0)
analyseColonyVectors(myColonyVectors[1], save.table = F, save.markdown = F)
2^8
2^8 * 3
BiocManager::install("edgeR")
library(edgeR)
edgeRUsersGuide()
library(DeadOrAlive)
library(parallel)
no_cores <- 2
cl <- makeCluster(no_cores)
exp <- "BarSeq_2_Rapamycin_Concentration"
library
dir <- list.files(paste0("~/Documents/PhD_Large_Files/", exp), full.names = T)
dir
files <- list.files(dir, "\\.jpg")
files
exp <- "Bar Seq_Rapamycin"
dir <- list.files(paste0("~/Documents/PhD_Large_Files/", exp), full.names = T)
dir
exp <- "Bar_Seq_Rapamycin"
dir <- list.files(paste0("~/Documents/PhD_Large_Files/", exp), full.names = T)
files <- list.files(dir, "\\.jpg")
files
imageNo <- unlist(regmatches(files, regexec(paste0("\\d+_", exp, "\\.jpg"), files)))
imageNo <- as.numeric(sub(paste0("_", exp, "\\.jpg"), "", imageNo))
library(HDAr)
attach(faithful)
library(mclust)
plot(faithful)
faithfulMclust <- Mclust(faithful)
plot(faithfulMclust, what="classification")
summary(faithfulMclust, parameters=T)
faithfulMclust <- Mclust(faithful, G=2)
plot(faithfulMclust, what="classification")
summary(faithfulMclust, parameters=T)
faithfulMclust <- Mclust(faithful)
plot(faithfulMclust, what="classification")
summary(faithfulMclust, parameters=T)
data
data <- data.frame(x=c(rgamma(200, 1, 20), c(rnorm(3000, 1, 0.1), sample(seq(0, 1.1, length.out=501), 400, T))))
dat
data
head(data)
plot(data)
plot(data, cex=0.01)
myTest <- densityMclust(data$x, G=1)
plot(myTest)
myTest <- densityMclust(data$x, G=2)
plot(myTest)
?densityMclust
myTest <- densityMclust(data$x, faithful[,1])
plot(myTest)
plot(myTest)
myTest
summary(myTest)
myTest <- densityMclust(faithful[,1])
plot(myTest)
myTest
myTest$G
?densityMclust
library(mclust)
attach(faithful)
plot(faithful)
faithfulMclust <- Mclust(faithful)
plot(faithfulMclust, what="classification")
faithfulMclust <- Mclust(faithful, G=2)
plot(faithfulMclust, what="classification")
summary(faithfulMclust, parameters=T)
faithfulMclust <- Mclust(faithful, G=2)
faithfulMclust <- Mclust(faithful, G=5)
plot(faithfulMclust, what="classification")
faithfulMclust <- Mclust(faithful, G=4)
plot(faithfulMclust, what="classification")
faithfulMclust <- Mclust(faithful, G=7)
plot(faithfulMclust, what="classification")
plot(faithfulMclust)
faithfulMclust <- Mclust(faithful)
plot(faithfulMclust)
devtools::install_github("JohnTownsend92/DeadOrAlive")
devtools::install_github("JohnTownsend92/DeadOrAlive", force=T)
vignette("DeadOrAliveVignette", package="DeadOrAlive")
setwd("~/Desktop/DeadOrAlive/vignettes/")
